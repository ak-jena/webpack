{"version":3,"file":"ActiveOverlay.js","sourceRoot":"","sources":["ActiveOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    ifDefined,\n    property,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { reparentChildren } from '@spectrum-web-components/shared';\nimport { Color, Scale } from '@spectrum-web-components/theme';\nimport styles from './active-overlay.css.js';\nimport {\n    OverlayOpenDetail,\n    Placement,\n    TriggerInteractions,\n} from './overlay-types.js';\nimport { applyMaxSize, createPopper, Instance, maxSize } from './popper.js';\n\nexport interface PositionResult {\n    arrowOffsetLeft: number;\n    arrowOffsetTop: number;\n    maxHeight: number;\n    placement: string;\n    positionLeft: number;\n    positionTop: number;\n}\n\ndeclare global {\n    interface Document {\n        fonts?: {\n            ready: Promise<void>;\n        };\n    }\n}\n\ntype OverlayStateType =\n    | 'idle'\n    | 'active'\n    | 'visible'\n    | 'hiding'\n    | 'dispose'\n    | 'disposed';\ntype ContentAnimation = 'spOverlayFadeIn' | 'spOverlayFadeOut';\n\nconst stateMachine: {\n    initial: OverlayStateType;\n    states: {\n        [stateName: string]: {\n            on: {\n                [transitionName: string]: OverlayStateType;\n            };\n        };\n    };\n} = {\n    initial: 'idle',\n    states: {\n        idle: {\n            on: {\n                active: 'active',\n            },\n        },\n        active: {\n            on: {\n                visible: 'visible',\n                hiding: 'hiding',\n                idle: 'idle',\n            },\n        },\n        visible: {\n            on: {\n                hiding: 'hiding',\n                idle: 'idle',\n            },\n        },\n        hiding: {\n            on: {\n                dispose: 'dispose',\n            },\n        },\n        dispose: {\n            on: {\n                disposed: 'disposed',\n            },\n        },\n        disposed: {\n            on: {},\n        },\n    },\n};\n\nconst stateTransition = (\n    state?: OverlayStateType,\n    event?: string\n): OverlayStateType => {\n    if (!state) return stateMachine.initial;\n    /* c8 ignore next */\n    if (!event) return state;\n    return stateMachine.states[state].on[event] || state;\n};\n\nexport class ActiveOverlay extends SpectrumElement {\n    public overlayContent!: HTMLElement;\n    public overlayContentTip?: HTMLElement;\n    public trigger!: HTMLElement;\n\n    private popper?: Instance;\n\n    @property()\n    public _state = stateTransition();\n    public get state(): OverlayStateType {\n        return this._state;\n    }\n    public set state(state: OverlayStateType) {\n        const nextState = stateTransition(this.state, state);\n        if (nextState === this.state) {\n            return;\n        }\n        this._state = nextState;\n        if (\n            this.state === 'active' ||\n            this.state === 'visible' ||\n            this.state === 'hiding'\n        ) {\n            this.setAttribute('state', this.state);\n        } else {\n            this.removeAttribute('state');\n        }\n    }\n\n    @property({ reflect: true, type: Boolean })\n    public animating = false;\n\n    @property({ reflect: true })\n    public placement?: Placement;\n    @property({ attribute: false })\n    public color?: Color;\n    @property({ attribute: false })\n    public receivesFocus?: 'auto';\n    @property({ attribute: false })\n    public scale?: Scale;\n\n    public tabbingAway = false;\n    private originalPlacement?: Placement;\n    private restoreContent?: () => Element[];\n\n    /**\n     * @prop Used by the popper library to indicate where the overlay was\n     *       actually rendered. Popper may switch which side an overlay\n     *       is rendered on to fit it on the screen\n     */\n    @property({ attribute: 'data-popper-placement' })\n    public dataPopperPlacement?: Placement;\n\n    public focus(): void {\n        const firstFocusable = this.querySelector(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]), [focusable]'\n        ) as HTMLElement;\n        if (firstFocusable) {\n            firstFocusable.focus();\n            /* c8 ignore next 3 */\n        } else {\n            super.focus();\n        }\n        this.removeAttribute('tabindex');\n    }\n\n    private get hasTheme(): boolean {\n        return !!this.color || !!this.scale;\n    }\n\n    public offset = 6;\n    public interaction: TriggerInteractions = 'hover';\n    private positionAnimationFrame = 0;\n\n    private timeout?: number;\n\n    public static get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    public constructor() {\n        super();\n        this.stealOverlayContentPromise = new Promise(\n            (res) => (this.stealOverlayContentResolver = res)\n        );\n    }\n\n    private _modalRoot?: ActiveOverlay;\n\n    public get hasModalRoot(): boolean {\n        return !!this._modalRoot;\n    }\n\n    public feature(): void {\n        this.tabIndex = -1;\n        const parentOverlay = this.trigger.closest('active-overlay');\n        const parentIsModal = parentOverlay && parentOverlay.slot === 'open';\n        // If an overlay it triggered from within a \"modal\" overlay, it needs to continue\n        // to act like one to get treated correctly in regards to tab trapping.\n        if (this.interaction === 'modal' || parentIsModal || this._modalRoot) {\n            this.slot = 'open';\n            // If this isn't a modal root, walk up the overlays to the next modal root\n            // and \"feature\" each on of the intervening overlays.\n            if (this._modalRoot) {\n                parentOverlay?.feature();\n            }\n        }\n    }\n\n    public obscure(\n        nextOverlayInteraction: TriggerInteractions\n    ): ActiveOverlay | undefined {\n        if (this.slot && nextOverlayInteraction === 'modal') {\n            this.removeAttribute('slot');\n            // Obscure upto and including the next modal root.\n            if (this.interaction !== 'modal') {\n                const parentOverlay = this.trigger.closest('active-overlay');\n                this._modalRoot = parentOverlay?.obscure(\n                    nextOverlayInteraction\n                );\n                return this._modalRoot;\n            }\n            return this;\n        }\n        return undefined;\n    }\n\n    public firstUpdated(changedProperties: PropertyValues): void {\n        super.firstUpdated(changedProperties);\n\n        /* c8 ignore next */\n        if (!this.overlayContent) return;\n\n        this.stealOverlayContent(this.overlayContent);\n\n        /* c8 ignore next */\n        if (!this.overlayContent || !this.trigger) return;\n\n        if (this.placement && this.placement !== 'none') {\n            this.popper = createPopper(this.trigger, this, {\n                placement: this.placement,\n                modifiers: [\n                    maxSize,\n                    applyMaxSize,\n                    {\n                        name: 'arrow',\n                        options: {\n                            element: this.overlayContentTip,\n                        },\n                    },\n                    {\n                        name: 'offset',\n                        options: {\n                            offset: [0, this.offset],\n                        },\n                    },\n                ],\n            });\n        }\n\n        this.state = 'active';\n\n        document.addEventListener('sp-update-overlays', () => {\n            this.updateOverlayPosition();\n            this.state = 'visible';\n        });\n\n        this.feature();\n        this.updateOverlayPosition()\n            .then(() => this.applyContentAnimation('spOverlayFadeIn'))\n            .then(() => {\n                if (this.receivesFocus) {\n                    this.focus();\n                }\n            });\n    }\n\n    private updateOverlayPopperPlacement(): void {\n        /* c8 ignore next */\n        if (!this.overlayContent) return;\n\n        if (this.dataPopperPlacement) {\n            // Copy this attribute to the actual overlay node so that it can use\n            // the attribute for styling shadow DOM elements based on the side\n            // that popper has chosen for it\n            this.overlayContent.setAttribute(\n                'placement',\n                this.dataPopperPlacement\n            );\n        } else if (this.originalPlacement) {\n            this.overlayContent.setAttribute(\n                'placement',\n                this.originalPlacement\n            );\n        } else {\n            this.overlayContent.removeAttribute('placement');\n        }\n    }\n\n    public updated(changedProperties: PropertyValues): void {\n        if (changedProperties.has('dataPopperPlacement')) {\n            this.updateOverlayPopperPlacement();\n        }\n    }\n\n    private open(openDetail: OverlayOpenDetail): void {\n        this.extractDetail(openDetail);\n    }\n\n    private extractDetail(detail: OverlayOpenDetail): void {\n        this.overlayContent = detail.content;\n        this.overlayContentTip = detail.contentTip;\n        this.trigger = detail.trigger;\n        this.placement = detail.placement;\n        this.offset = detail.offset;\n        this.interaction = detail.interaction;\n        this.color = detail.theme.color;\n        this.scale = detail.theme.scale;\n        this.receivesFocus = detail.receivesFocus;\n    }\n\n    public dispose(): void {\n        /* c8 ignore next */\n        if (this.state !== 'dispose') return;\n\n        /* c8 ignore next 4 */\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            delete this.timeout;\n        }\n\n        if (this.popper) {\n            this.popper.destroy();\n            this.popper = undefined;\n        }\n        this.trigger.removeEventListener(\n            'keydown',\n            this.handleInlineTriggerKeydown\n        );\n\n        this.returnOverlayContent();\n        this.state = 'disposed';\n\n        if (this.willNotifyClosed) {\n            this.overlayContent.dispatchEvent(new Event('sp-overlay-closed'));\n            this.willNotifyClosed = false;\n        }\n    }\n\n    private stealOverlayContent(element: HTMLElement): void {\n        this.originalPlacement = element.getAttribute('placement') as Placement;\n        this.restoreContent = reparentChildren([element], this, (el) => {\n            const slotName = el.slot;\n            el.removeAttribute('slot');\n            return (el) => {\n                el.slot = slotName;\n            };\n        });\n        this.stealOverlayContentResolver();\n    }\n\n    private willNotifyClosed = false;\n\n    private returnOverlayContent(): void {\n        /* c8 ignore next */\n        if (!this.restoreContent) return;\n\n        const [element] = this.restoreContent();\n        this.restoreContent = undefined;\n        this.willNotifyClosed = true;\n\n        if (this.originalPlacement) {\n            element.setAttribute('placement', this.originalPlacement);\n            delete this.originalPlacement;\n        }\n    }\n\n    public async updateOverlayPosition(): Promise<void> {\n        await (document.fonts ? document.fonts.ready : Promise.resolve());\n        if (this.popper) {\n            await this.popper.update();\n        }\n    }\n\n    public async hide(animated = true): Promise<void> {\n        this.state = 'hiding';\n        if (animated) {\n            await this.applyContentAnimation('spOverlayFadeOut');\n        }\n        this.state = 'dispose';\n    }\n\n    private schedulePositionUpdate(): void {\n        // Edge needs a little time to update the DOM before computing the layout\n        cancelAnimationFrame(this.positionAnimationFrame);\n        this.positionAnimationFrame = requestAnimationFrame(() =>\n            this.updateOverlayPosition()\n        );\n    }\n\n    private onSlotChange(): void {\n        this.schedulePositionUpdate();\n    }\n\n    public handleInlineTriggerKeydown = (event: KeyboardEvent): void => {\n        const { code, shiftKey } = event;\n        /* c8 ignore next */\n        if (code !== 'Tab') return;\n        if (shiftKey) {\n            this.tabbingAway = true;\n            this.dispatchEvent(new Event('close'));\n            return;\n        }\n\n        event.stopPropagation();\n        event.preventDefault();\n        this.focus();\n    };\n\n    public connectedCallback(): void {\n        super.connectedCallback();\n        this.schedulePositionUpdate();\n    }\n\n    public applyContentAnimation(\n        animation: ContentAnimation\n    ): Promise<boolean> {\n        return new Promise((resolve): void => {\n            const contents = this.shadowRoot.querySelector(\n                '#contents'\n            ) as HTMLElement;\n            const doneHandler = (event: AnimationEvent): void => {\n                if (animation !== event.animationName) return;\n                contents.removeEventListener('animationend', doneHandler);\n                contents.removeEventListener('animationcancel', doneHandler);\n                this.animating = false;\n                resolve(event.type === 'animationcancel');\n            };\n            contents.addEventListener('animationend', doneHandler);\n            contents.addEventListener('animationcancel', doneHandler);\n\n            contents.style.animationName = animation;\n            this.animating = true;\n        });\n    }\n\n    public renderTheme(content: TemplateResult): TemplateResult {\n        const { color, scale } = this;\n        return html`\n            <sp-theme color=${ifDefined(color)} scale=${ifDefined(scale)}>\n                ${content}\n            </sp-theme>\n        `;\n    }\n\n    public render(): TemplateResult {\n        const content = html`\n            <div id=\"contents\">\n                <slot @slotchange=${this.onSlotChange}></slot>\n            </div>\n        `;\n        return this.hasTheme ? this.renderTheme(content) : content;\n    }\n\n    public static create(details: OverlayOpenDetail): ActiveOverlay {\n        const overlay = new ActiveOverlay();\n\n        if (details.content) {\n            overlay.open(details);\n        }\n\n        return overlay;\n    }\n\n    private stealOverlayContentPromise = Promise.resolve();\n    private stealOverlayContentResolver!: () => void;\n\n    protected async _getUpdateComplete(): Promise<void> {\n        await super._getUpdateComplete();\n        await this.stealOverlayContentPromise;\n    }\n}\n"]}