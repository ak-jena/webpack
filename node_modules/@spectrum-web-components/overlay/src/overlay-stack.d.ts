import { ActiveOverlay } from './ActiveOverlay.js';
import { OverlayOpenDetail } from './overlay-types';
import '../active-overlay.js';
export declare class OverlayStack {
    overlays: ActiveOverlay[];
    private preventMouseRootClose;
    private root;
    private handlingResize;
    private overlayTimer;
    constructor();
    private canTabTrap;
    private trappingInited;
    private tabTrapper;
    private overlayHolder;
    private initTabTrapping;
    private startTabTrapping;
    private stopTabTrapping;
    private get document();
    private get topOverlay();
    private findOverlayForContent;
    private addEventListeners;
    private isClickOverlayActiveForTrigger;
    openOverlay(details: OverlayOpenDetail): Promise<boolean>;
    addOverlayEventListeners(activeOverlay: ActiveOverlay): void;
    addReplaceOverlayEventListeners(activeOverlay: ActiveOverlay): void;
    addInlineOverlayEventListeners(activeOverlay: ActiveOverlay): void;
    closeOverlay(content: HTMLElement): void;
    private handleMouseCapture;
    private closeAllHoverOverlays;
    private hideAndCloseOverlay;
    private closeTopOverlay;
    /**
     * A "longpress" occurs before the "click" that creates it has occured.
     * In that way the first click will still be part of the "longpress" and
     * not part of closing the overlay.
     */
    private _doesNotCloseOnFirstClick;
    private handleMouse;
    private handleKeyUp;
    private handleResize;
}
